{"title":"jQuery之父-John Resig","date":"2018-06-26T07:09:31.000Z","link":"2018/06/26/John Resig","tags":["大神"],"categories":["拓展-知识增长"],"updated":"2019-08-25T13:43:42.031Z","content":"<blockquote>\n<p>今天才在百度百科中看到有关John Resig(jQuery之父)的介绍，颇为佩服，有些可惜为什么没有早些看到，大神果真是大神，真的是大写加粗的酷，大神的高中和大学VS学渣本人的高中和大学，我真的是完败了，高中的我根本就没听说过JavaScript、我也是到了大二才知道了JavaScript，邓小平爷爷说得对,计算机要从娃娃抓起。</p>\n</blockquote>\n<h2 id=\"John-Resig-JavaScript’s-Chuck-Norris\">John Resig: JavaScript’s Chuck Norris<a href=\"2018/06/26/John Resig#John-Resig-JavaScript’s-Chuck-Norris\"></a></h2><p>Chuck Norris（查克·诺里斯，美国著名武术家，世界著名空手道巨星）</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232446/o_16.png\" alt=\" \" class=\"article-img\"></p>\n<h2 id=\"一篇有关John-Resig有趣的文章\">一篇有关John Resig有趣的文章<a href=\"2018/06/26/John Resig#一篇有关John-Resig有趣的文章\"></a></h2><p>Some of the regular irc.freenode..net #jquery guys have come to the conclusion thatJohn Resig, creator ofjQuery, is the JavaScript world’s equivalent of Chuck Norris, so we came up with some ideas and decided to pay homage to him in a blog post.</p>\n<p>（irc.freenode..net 的家伙们已经得到了一个结论：John Resig，这个jQuery的创造者，就是Javascript世界中的 Chuck Norris，所以让咱们发个帖儿来膜拜下这个大牛吧！）Note: he might actually beChuck Norris, we’re not entirely sure.</p>\n<blockquote>\n<p>John Resig has never made a carousel plugin.. when he goes to the carnival, ALL the rides support jQuery.</p>\n</blockquote>\n<p>（John Resig 从未做过旋转木马插件，因为当他去游乐场的时候，所有的木马都支持 jQuery）</p>\n<blockquote>\n<p>John Resig can kill you with two lines of code. Sure, he could do it with one, but the force of the explosion would cause the universe to collapse into a giant black hole.</p>\n</blockquote>\n<p>（John Resig 可以用两行代码干掉你！当然，他用一行就够了，但是爆炸的威力会让宇宙崩塌成一个巨大的黑洞）</p>\n<blockquote>\n<p>John Resig’s computer is custom-fitted with a titanium keyboard, because anything less substantial will melt.</p>\n</blockquote>\n<p>（John Resig的电脑特别定制了钛键盘，因为稍微脆弱一点的会熔化掉）</p>\n<blockquote>\n<p>$(“John Resig”).position(); returns “everywhere!”.</p>\n</blockquote>\n<p>（$(‘John Resig’).position(); 返回”无所不在！”）</p>\n<blockquote>\n<p>When John Resig types $.jump() the console prints “how high?”</p>\n</blockquote>\n<p>（当 John Resig 输入 $.jump()，控制台输出”多高？”）</p>\n<blockquote>\n<p>When John Resig types $.require(), it’s not a request, it’s a threat.</p>\n</blockquote>\n<p>（当 John Resig 输入$.require(), 记住，这不是一个请求，这是一个恐吓！）</p>\n<blockquote>\n<p>John Resig does not $.queue().</p>\n</blockquote>\n<p>（哦！这家伙从来不排队！）</p>\n<blockquote>\n<p>John Resig scheduled a cron job to run “rm -rf /” sometime in 2012. How the heck did the Mayans know that?</p>\n</blockquote>\n<p>（John Resig 定义了一个计划任务，在 2012 年的某天运行”rm –rf/“，为什么玛雅人会知道？？）</p>\n<blockquote>\n<p>The last time John Resig used $.die(), they amended the Geneva Convention to expressly forbid it.</p>\n</blockquote>\n<p>（上一次 John Resig 用 $.die() 的时候，他们修订了日内瓦公约明确禁止这么做！- -）</p>\n<blockquote>\n<p>John Resig triggers onfocus ALL THE TIME.</p>\n</blockquote>\n<p>（John Resig 持续‘onfocus’ ）</p>\n<blockquote>\n<p>$(“John Resig”).length returns “14 inches”.</p>\n</blockquote>\n<p>（$(“John Resig”).length 返回~ 14 英寸！）</p>\n<blockquote>\n<p>John Resig doesn’t query the DOM, he just glances at it and gets all the elements he was expecting.</p>\n</blockquote>\n<p>（John Resig 从不查找 DOM，他只要扫一眼就会得到他想要的东西）</p>\n<blockquote>\n<p>When John Resig inspects an element, he sees the raw electrons.</p>\n</blockquote>\n<p>（John Resig 查看一个元素时，他看到的是原始的电子！）</p>\n<blockquote>\n<p>When John Resig edits his hosts file, he doesn’t need sudo.</p>\n</blockquote>\n<p>（当 John Resig 需要编辑 hosts 文件时，他不需要 sudo！）</p>\n<blockquote>\n<p>When John Resig runs scripts cross-domain, they just run.</p>\n</blockquote>\n<p>（当 John Resig 运行跨域脚本时，那就随便他运行吧~！！）</p>\n<blockquote>\n<p>John Resig doesn’t wait for the DOM to be ready, it waits for him to be ready.</p>\n</blockquote>\n<p>（John Resig 从不等待 DOM 变为 ready 状态，DOM 都在等他 ready）</p>\n<blockquote>\n<p>When John Resig tests isNaN(), it had better not be a number.</p>\n</blockquote>\n<p>（John Resig 检测 isNaN() 时，它最好不是一个数字）</p>\n<blockquote>\n<p>John Resig’s commits ignore all post-commit hooks, because John Resig always has the last word.</p>\n</blockquote>\n<p>（John Resig 提交新版本不需要写注释，因为 John Resig 也永远说不完）</p>\n<p>源英文地址：<a href=\"http://benalman.com/news/2009/12/john-resig-javascripts-chuck-norris/\" target=\"_blank\" rel=\"noopener\">http://benalman.com/news/2009/12/john-resig-javascripts-chuck-norris/</a></p>\n<h2 id=\"关于John-Resig的访谈-27岁的他\">关于John Resig的访谈(27岁的他)<a href=\"2018/06/26/John Resig#关于John-Resig的访谈-27岁的他\"></a></h2><h3 id=\"编程初体验\">编程初体验<a href=\"2018/06/26/John Resig#编程初体验\"></a></h3><p>《程序员》：你是如何开始编程的？</p>\n<p>John Resig：第一次编程大概是在初中，14、15岁，当时有个朋友带来张软盘，里面有QBASIC。在DOS系统下他向我展示了他自己的程序，我觉得非常有意思。从那时起我就开始想编程了，先后借了很多相关的书。最初是学习编写HTML，之后又转向CGI。</p>\n<p>《程序员》：你编写的第一个有意思的程序是什么，还有印象吗？</p>\n<p>John Resig：高中时，有一阵我通过编写网站应用来挣钱。我还会做一些诸如网站设计的工作，当然没有专业人员做得那么好。记得曾编写了一个订早餐的网页应用，让那些熬夜无暇早起买早餐的人通过这个网页应用订餐。不过，这还算不上最有意思的程序。我的第一个最有趣的程序是在大学时编写的。那时我们要建立自己的时间表，以分配好上课时间，所以我编了一个选课的程序，它可以推荐出最优的选课结果，例如：如果你要选数学、计算机和除此之外的一门科学课程，程序可以推荐出可在一天内完成三门课程的时间表，这样你就有六天的空闲时间去做自己想做的事情。</p>\n<p>《程序员》：学生时代的生活和以后的编程生涯，两者之间有没有内在的联系？</p>\n<p>John Resig：这说不太清楚，我喜欢编程，它可以让我完全理解一个东西。选择Web编程是因为自己愿意做别人不乐意做的事情。比如很多人不愿意处理同样的网页在不同浏览器下表现各异的问题。但这很有挑战，也很有乐趣。</p>\n<p>《程序员》：能不能谈谈你在大学生活中印象最深的事情？</p>\n<p>John Resig：对我来说最重要的事情，是那些计算机科学课程。大学期间我并没做很多Web编程，而是做了很多和数据库相关的工作。这是我感兴趣的方面。我还喜欢研究社区，做数据挖掘研究，其中就包括判断社交网站怎样增长之类，那时我还发表了两篇关于数据挖掘的论文。离开大学后，我又回到Web编程，尽管数据挖掘很有意思，但我还是觉得Web编程的吸引力更大。</p>\n<p>《程序员》：大学最喜欢的计算机课程有哪些？</p>\n<p>John Resig：我喜欢有挑战性的课。例如XML，我本来以为课程很简单，可以轻松得个A。结果老师第一堂课就把我知道的东西都讲完了，从第二节课开始所讲内容我完全听不懂，很难学，结果我得了B。但我还是很自豪，因为学了很多东西。</p>\n<h2 id=\"jQuery-背后的故事\">jQuery 背后的故事<a href=\"2018/06/26/John Resig#jQuery-背后的故事\"></a></h2><p>《程序员》：向我们透露一些jQuery背后的故事吧。最开始您是怎样做的？</p>\n<p>John Resig：做Web编程时，我非常讨厌浏览器的Bug，不同的浏览器有不同的Bug，而且数量非常多。于是我用JavaScript做了CSS选择引擎，之后还做了个动画引擎，都是自娱自乐。但与此同时我发现自己不能将制作的一些应用放到浏览器里。为了将应用放到Firefox浏览器中，我开始制作相关的API，以应用那个CSS选择引擎和动画引擎，这些最终成为了jQuery。几个月后，我将那些应用做进Firefox里，之后在IE里也可以运行。如今这仍是我的目标——让每个人都可以在网页里写点什么，并且写的东西能够在浏览器中顺利运行出来。</p>\n<p>《程序员》：支撑jQuery的基本原理有哪些？</p>\n<p>John Resig：原则很简单。作为一名程序员，我希望代码简洁，不希望在编程的时候不停地重复某些内容，设计jQuery的目标就是为了简化代码，使程序更高效。</p>\n<p>《程序员》：jQuery是如何把简单和高效结合在一起的？</p>\n<p>John Resig：很多人想直接做大项目，例如像Gmail、Yahoo!Mail之类。但实际上通过很简单的过程也可以解决大项目中一些很困难的关键点，化大为小，化繁为简，jQuery就是这样做的。</p>\n<p>《程序员》：如果能重新再来一次，你会在哪些方面做出设计改变？</p>\n<p>John Resig：我要改一些方法的名称。初期在命名上出现了一些失误，后来我花了很多时间才理解到jQuery应该是现在这样。有些事情如果一开始就做好，可能会少走很多弯路。</p>\n<p>《程序员》：谈谈jQuery的研发过程吧。</p>\n<p>John Resig：我们主要的资源是jQuery的Bug Tracker，有一个Team专门经营Bug Tracker。我负责修改这些Bug。最终我们有一个需要修改的Bug列表。然后有人改程序，提交给别人通过，并处理这些Bug。大多数时候都是我来改Bug，发布新版本。</p>\n<p>《程序员》：中国的程序员该如何做才能参加到这个项目？</p>\n<p>John Resig：直接加入就可以。所有人都可以看到内部的每次代码提交，然后更优秀的程序员会加入Bug Tracker。他们能看到我们发现问题和处理问题的整个过程，从而学会怎样发布补丁。我们的小组一共20个人，只有3个代码的贡献者，其余17人都在做各种各样其他事情。jQuery网站是世界排名前700位的网站，所以有很多工作需要处理。</p>\n<p>《程序员》：在中国有没有正式的文档网站？</p>\n<p>John Resig：有jQuery..org..cn，但这不是正式的，不过里面有jQuery文档的翻译资料。我们急需有人帮助翻译这些文档。</p>\n<p>《程序员》：jQuery的未来怎样？</p>\n<p>John Resig：我们基本不加入新功能，目前大多数工作都是优化，让jQuery变得更快、更强、更容易理解。未来的工作也是优化，使jQuery功能更清晰化。</p>\n","prev":{"title":"jQuery对象和DOM对象","link":"2018/06/27/jQuery对象和DOM对象"},"next":{"title":"jQuery常用方法之事件对象","link":"2018/06/25/JQuery常用方法之事件对象"},"plink":"http://yoursite.com/2018/06/26/John Resig/","toc":[{"title":"John Resig: JavaScript’s Chuck Norris","id":"John-Resig-JavaScript’s-Chuck-Norris","index":"1"},{"title":"一篇有关John Resig有趣的文章","id":"一篇有关John-Resig有趣的文章","index":"2"},{"title":"关于John Resig的访谈(27岁的他)","id":"关于John-Resig的访谈-27岁的他","index":"3","children":[{"title":"编程初体验","id":"编程初体验","index":"3.1"}]},{"title":"jQuery 背后的故事","id":"jQuery-背后的故事","index":"4"}]}