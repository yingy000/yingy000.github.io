{"title":"IE浏览器和标准浏览器的兼容性问题","date":"2018-07-06T06:43:31.000Z","link":"2018/07/06/IE浏览器和标准浏览器的兼容性问题","tags":["浏览器兼容性"],"categories":["前端"],"updated":"2018-10-12T14:47:21.811Z","content":"<h3 id=\"1、document-formName-item-quot-itemName-quot\">1、<code>document.formName.item(&quot;itemName&quot;)</code><a href=\"2018/07/06/IE浏览器和标准浏览器的兼容性问题#1、document-formName-item-quot-itemName-quot\"></a></h3><p>IE浏览器：可以使用<code>document.formName.item(&quot;itemName&quot;)</code>或<code>document.formName.elements[&quot;elementName&quot;]</code>;</p>\n<p>标准浏览器：只能使用<code>document.formName.elements[&quot;elementName&quot;]</code>。</p>\n<p>解决方法：统一使用<code>document.formName.elements[&quot;elementName&quot;]</code>。</p>\n<p>2、HTML对象获取问题</p>\n<p>标准浏览器：可以使用<code>document.getElementById(&quot;idName&quot;)</code></p>\n<p>IE浏览器使用<code>document.idname</code>或者<code>document.getElementById(&quot;idName&quot;)</code></p>\n<p>解决办法：统一使用<code>document.getElementById(&quot;idName&quot;)</code>;</p>\n<p>3、事件委托方法</p>\n<p>IE浏览器：使用<code>document.body.onload = inject;</code>其中<code>function inject()</code>在这之前已被实现,在这里只是调用一下;</p>\n<p>标准浏览器：使用<code>document.body.onload</code> = inject();</p>\n<p>解决方法：统一使用<code>document.body.onload=new Function(&#39;inject()&#39;)</code>; 或者<code>document.body.onload = function(){}</code></p>\n<p>4、集合类对象</p>\n<p>IE浏览器：可以使用<code>()</code>或<code>[]</code>获取集合类对象；</p>\n<p>标准浏览器：只能使用<code>[ ]</code>获取集合类对象。</p>\n<p>解决方法：统一使用<code>[]</code>获取集合类对象。</p>\n<p>5、自定义属性问题</p>\n<p>IE浏览器：可以使用获取常规属性的方法来获取自定义属性,也可以使用<code>getAttribute()</code>获取自定义属性</p>\n<p>标准浏览器：只能使用<code>getAttribute()</code>获取自定义属性。</p>\n<p>解决方法：统一通过<code>getAttribute()</code>获取自定义属性，使用”.”点运算符访问更加方便。</p>\n<p>6、<code>eval(&quot;idName&quot;)</code>问题</p>\n<p>IE浏览器：可以使用<code>eval(&quot;idName&quot;)</code>或<code>getElementById(&quot;idName&quot;)</code>来取得id为idName的HTML对象</p>\n<p>标准浏览器：只能使用<code>getElementById(&quot;idName&quot;)</code>来取得id为idName的HTML对象。</p>\n<p>解决方法：统一用<code>getElementById(&quot;idName&quot;)</code>来取得id为idName的HTML对象。</p>\n<p>7、变量名与某HTML对象ID相同的问题</p>\n<p>IE浏览器：HTML对象的ID可以作为document的下属对象变量名直接使用;标准浏览器只能通过<code>getElementById</code>获取HTML5对象的ID值.</p>\n<p>标准浏览器：可以使用与HTML对象ID相同的变量名;IE浏览器下则不能。</p>\n<p>解决方法：使用<code>document.getElementById(&quot;idName&quot;)</code>代替<code>document.idName</code>，并且最好不要取HTML对象ID相同的变量名，以减少错误;在声明变量时，一律加上var,以避免歧义。</p>\n<p>8、const问题</p>\n<p>标准浏览器：可以使用<code>const</code>关键字或var关键字来定义常量。</p>\n<p>IE浏览器：只能使用<code>va</code>r关键字来定义常量。</p>\n<p>解决方法：统一使用<code>var</code>关键字来定义常量。</p>\n<p>9、<code>input.type</code>属性问题</p>\n<p>IE浏览器：<code>input.type</code>属性为只读</p>\n<p>标准浏览器：<code>input.type</code>属性为可读可写。</p>\n<p>解决方法：可以分别创建输入框，让输入框尽可能只展现可读属性，尽量隐藏它的可写属性，因为IE浏览器浏览器不支持，想通过把type为password的值改为text，IE浏览器下是不允许的。</p>\n<p>10、<code>window.event</code>问题</p>\n<p><code>window.event</code>只能在IE浏览器下运行，而不能在标准浏览器下运行,这是因为标准浏览器的event只能在事件发生的现场使用。标准浏览器必须从源处加入event作参数传递。IE浏览器忽略该参数，用<code>window.event</code>来读取该event。</p>\n<p>解决方法： <code>var e = e || window.event</code></p>\n<p>举例：在IE浏览器下获得鼠标位置的方法</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">&lt;button&gt;获得鼠标点击横坐标&lt;/button&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">   var btn=document.getElementsByTagName(&quot;button&quot;);</span><br><span class=\"line\">      btn.onclick=function()&#123;</span><br><span class=\"line\">          alert(event.clientX);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n<p>兼容式的获得鼠标位置的方法</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">&lt;button&gt;获得鼠标点击横坐标&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script type=\"text/</span>javascript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">   var btn=document.getElementsByTagName(\"</span>button<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">     btn.onclick=function(event)&#123;</span></span><br><span class=\"line\"><span class=\"string\">       event = event || window.event;</span></span><br><span class=\"line\"><span class=\"string\">        alert(event.clientX);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>11、event.x与event.y问题</p>\n<p>IE浏览器：even对象有x,y属性,但是没有pageX，pageY属性</p>\n<p>标准浏览器：even对象有pageX，pageY属性，但是没有x,y属性。</p>\n<p>解决方法：使用<code>var x = e.x ? e.x : e.pageX;</code>来代替IE浏览器下的event.x或者标准浏览器下的e.pageX；</p>\n<p>12、event.srcElement问题</p>\n<p>IE浏览器：event对象有srcElement属性,但是没有target属性;</p>\n<p>标准浏览器：even对象有target属性,但是没有srcElement属性。</p>\n<p>解决方法：使用<code>obj(obj = event.srcElement ? event.srcElement : event.target;)</code>来代替IE浏览器下的<code>event.srcElement</code>或者标准浏览器下的<code>event.target</code>，请同时注意event的兼容性问题(第10个)。</p>\n<p>13、window.location.href问题</p>\n<p>IE浏览器或者标准浏览器较高版本：可以使用window.location或window.location.href；</p>\n<p>标准浏览器旧版本：只能使用<code>window.location</code>。</p>\n<p>解决方法：使用<code>window.location</code>来代替<code>window.location.href</code>。</p>\n<p>14、模态和非模态窗口问题</p>\n<p>IE浏览器：可以通过showModalDialog和showModelessDialog打开模态和非模态窗口，标准浏览器下则不能。</p>\n<p>解决方法：直接使用<code>window.open(pageURL,name,parameters)</code>方式打开新窗口。</p>\n<p>如果需要将子窗口中的参数传递回父窗口，可以在子窗口中使用<code>window.opener</code>来访问父窗口。如果需要父窗口控制子窗口的话，使用<br><code>var subWindow = window.open(pageURL,name,parameters)</code>; 来获得新开的窗口对象。</p>\n<p>如果需要将frame中的参数传回父窗口，可以在frame中使用parent关键字来访问父窗口。</p>\n<p>15、body载入问题</p>\n<p>标准浏览器：body在body标签没有被浏览器完全读入之前就存在</p>\n<p>IE浏览器：body必须在body标签被浏览器完全读入之后才存在</p>\n<p>16、table操作问题</p>\n<p>IE浏览器和标准浏览器对于<code>&lt;table&gt;标签</code>的操作都各不相同，</p>\n<p>IE浏览器中不允许对<code>&lt;table&gt;</code>标签和<code>&lt;tr&gt;</code>的<code>innerHTML</code>赋值，并且如果js增加一个tr时不支持使用<code>appendChild</code>方法。</p>\n<p>标准浏览器：支持：<code>document.appendChild</code>方法</p>\n<p>解决办法：把行插入到TBODY中，不要直接插入到表</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//向table追加一个空行：</span><br><span class=\"line\">var row = otable.insertRow(-1);</span><br><span class=\"line\">var cell = document.createElement(&quot;td&quot;);</span><br><span class=\"line\">cell.innerHTML = &quot;&quot;;</span><br><span class=\"line\">cell.className = &quot;XXXX&quot;;</span><br><span class=\"line\">row.appendChild(cell);</span><br></pre></td></tr></table></div></figure>\n<p>17、获取table的行数和列数</p>\n<p>在IE中，获取行列数可以使用下面的代码：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> detailT= grid.gettable(<span class=\"string\">\"11\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">//获取行的长度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> r=detailT.rows.length;</span><br><span class=\"line\">  <span class=\"comment\">//获取列的长度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> l=detailT.cells.length;</span><br></pre></td></tr></table></div></figure>\n<p>毫无疑问，在标准的浏览器，这样的方式获取列的长度就是无效的。</p>\n<p>解决方案：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> detailT= grid.gettable(<span class=\"string\">\"11\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取行的长度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> r=detailT.rows.length;</span><br><span class=\"line\"><span class=\"comment\">//获取列的长度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> l=detailT.rows[<span class=\"number\">0</span>].cells.length;</span><br></pre></td></tr></table></div></figure>\n<p>18、访问父元素的区别</p>\n<p>IE浏览器：支持<code>parentElement</code>和<code>parentNode</code>获取父节点，</p>\n<p>标准浏览器：只支持<code>parentNode</code>。</p>\n<p>解决方法：因为firefox与IE都支持DOM，因此全部使用<code>obj.parentNode</code>;</p>\n<p>19、<code>children</code>与<code>childNodes</code></p>\n<p>标准浏览器：<code>childNodes</code>会把换行和空白字符都算作父节点的子节点。</p>\n<p>IE浏览器：<code>childNodes</code>和`children不会把换行和空白字符都算作父节点的子节点，会直接忽略。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"dd\"</span>&gt;</span><br><span class=\"line\">    &lt;div&gt;yizhu2000&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br></pre></td></tr></table></div></figure>\n<p>ID值为dd的div在IE浏览器用childNodes查看，其子节点数为1，而在标准浏览器其子节点数为3，我们可以从标准浏览器的dom查看器里面看到他的childNodes为<code>[&quot;\\n &quot;, div, &quot;\\n&quot;]</code>。</p>\n<p>解决办法：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(HTMLElement) != <span class=\"string\">\"undefined\"</span> &amp;&amp; !<span class=\"built_in\">window</span>.opera) &#123;</span><br><span class=\"line\">    HTMLElement.prototype.__defineGetter__(<span class=\"string\">\"children\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> a = [], j = <span class=\"number\">0</span>, n, i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.childNodes.length; i++) &#123;</span><br><span class=\"line\">           n = <span class=\"keyword\">this</span>.childNodes[i];</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (n.nodeType == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                a[j++] = n;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (n.name) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (!a[n.name])</span><br><span class=\"line\">                  a[n.name] = [];</span><br><span class=\"line\">                  a[n.name][a[n.name].length] = n;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                 <span class=\"keyword\">if</span> (n.id)</span><br><span class=\"line\">                   a[n.id] = n;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></div></figure>\n<p>20、对象宽高赋值问题</p>\n<p>标准浏览器中类似 <code>obj.style.height = imgObj.height</code> 的语句无效。</p>\n<p>解决方法：统一使用 <code>obj.style.height = imgObj.height + &#39;px&#39;</code>;</p>\n<p>21、<code>setAttribute(&#39;style&#39;,&#39;color:red;&#39;)</code></p>\n<p>标准浏览器：支持<code>setAttribute(&#39;style&#39;,&#39;color:red;&#39;)</code></p>\n<p>IE浏览器：不支持<code>setAttribute(&#39;style&#39;,&#39;color:red;&#39;)</code></p>\n<p>解决方法：使用<code>object.style.cssText = ‘color:red;&#39;</code></p>\n<p>22、类名设置<code>setAttribute(&#39;class&#39;,&#39;styleClass&#39;)</code></p>\n<p>标准浏览器：支持<code>setAttribute(&#39;style&#39;,&#39;color:red;&#39;)</code>，指定属性名为class。</p>\n<p>IE浏览器：不支持<code>setAttribute(&#39;style&#39;,&#39;color:red;&#39;)</code></p>\n<p>，IE浏览器不会设置元素的class属性，相反只使用<code>setAttribute时IE</code>获取className属性。</p>\n<p>解决方法：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setAttribute(<span class=\"string\">'class'</span>,<span class=\"string\">'styleClass'</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">setAttribute(<span class=\"string\">'className'</span>,<span class=\"string\">'styleClass'</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">或者直接 object.className=<span class=\"string\">'styleClass'</span>;</span><br></pre></td></tr></table></div></figure>\n<p>IE浏览器和标准浏览器都支持<code>object.className</code>。</p>\n<p>23、用<code>setAttribute</code>设置事件</p>\n<p>标准浏览器：支持用<code>setAttribute</code>设置事件</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'objId'</span>);</span><br><span class=\"line\">   obj.setAttribute(<span class=\"string\">'onclick'</span>,<span class=\"string\">'funcitonname();'</span>);</span><br></pre></td></tr></table></div></figure>\n<p>IE浏览器：不支持用<code>setAttribute</code>设置事件</p>\n<p>解决办法：IE浏览器中必须用点记法来引用所需的事件处理程序,并且要用赋予匿名函数</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'objId'</span>); </span><br><span class=\"line\">    obj.onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;fucntionname();&#125;;</span><br></pre></td></tr></table></div></figure>\n<p>这种形式所有浏览器都支持，不存在兼容性问题。</p>\n<p>24、<code>innerText</code>问题</p>\n<p>IE浏览器：支持<code>innerText</code></p>\n<p>标准浏览器：不支持<code>innerText</code>，但是支持<code>textContent</code>。</p>\n<p>解决方法：<code>elem.innerText = elem.textContent = &quot;值&quot;</code></p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (navigator.appName.indexOf(<span class=\"string\">\"Explorer\"</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'element'</span>).innerText = <span class=\"string\">\"my text\"</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'element'</span>).textContent = <span class=\"string\">\"my text\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>25、样式关键字冲突问题</p>\n<p>CSS属性与Javascript中的保留关键字命名相同，IE浏览器中style+属性，标准浏览器中css+属性。</p>\n<p>26、<code>removeChild</code>和<code>removeNode</code>的问题</p>\n<p>IE浏览器：支持<code>appendNode</code>和<code>removeNode</code>。</p>\n<p>标准浏览器：支持<code>removeChild</code>。</p>\n<p>27、事件监听函数的问题</p>\n<p>标准浏览器的写法：<code>addEventListener()</code></p>\n<p>IE浏览器的写法：<code>attachEvent()</code></p>\n<p>解决方法：判断<code>addEventListener</code>是否存在，如果存在则用否则用IE浏览器8以下的版本的绑定方法<code>attachEvent</code>，<code>removeEventListener()</code>和<code>detachEvent()</code>也是一样的用法。</p>\n<p>28、<code>AJAX</code>获取<code>XMLHTTP</code>的区别</p>\n<p>IE浏览器：用<code>window.ActiveXObject</code>获取<code>XMLHTTP</code></p>\n<p>标准浏览器：用<code>window.XMLHttpRequest</code>获取<code>XMLHTTP</code></p>\n<p>解决办法：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHttpRequest) &#123;</span><br><span class=\"line\">       xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">   &#125; elseif (<span class=\"built_in\">window</span>.ActiveXObject) &#123; <span class=\"comment\">// IE的获取方式</span></span><br><span class=\"line\">        xhr = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></div></figure>\n<p>29、阻止事件冒泡</p>\n<p>标准浏览器：<code>stopPropagation()</code></p>\n<p>IE浏览器：<code>cancelBubble</code></p>\n<p>解决方法：判断<code>stopPropagation</code>是否存在，如果存在则用标准写法否则则用IE浏览器的写法。</p>\n<p>30、阻止默认事件</p>\n<p>标准浏览器：<code>preventDefault()</code></p>\n<p>IE浏览器：<code>returnValue()</code></p>\n<p>解决方法：一般情况可以直接使用<code>return false</code>阻止，虽然可以达到相同的效果，但和取消默认事件的意义并不是相同的</p>\n<p>31、css()方法可以获取指定元素集合中第一个元素的样式属性的计算值。</p>\n<p>标准浏览器：通过的 <code>getComputedStyle()</code>方法取得某些属性</p>\n<p>IE浏览器：通过<code>currentStyle</code>和<code>runtimeStyle</code>属性取得某些特定的属性</p>\n<p>32、float属性</p>\n<p>IE浏览器的DOM 将float属性写成<code>styleFloat</code>实现，</p>\n<p>标准浏览器将float 属性写成<code>cssFloat</code>。</p>\n<p>解决方法：使用<code>&quot;float&quot;</code>，那就需要引入jQuery库，jQuery将为每个浏览器返回它需要的正确值。</p>\n<p>33、frame问题</p>\n<p><code>&lt;frame src=&quot;xxx.html&quot; id=&quot;frameId&quot; name=&quot;frameName&quot; /&gt;</code></p>\n<ul>\n<li>访问<code>frame</code>对象</li>\n</ul>\n<p>IE浏览器：使用<code>window.frameId</code>或者<code>window.frameName</code>来访问这个frame对象，<code>frameId</code>和<code>frameName</code>可以同名;</p>\n<p>标准浏览器：只能使用<code>window.frameName</code>来访问这个frame对象；</p>\n<p>在IE浏览器和标准浏览器中都可以使用<code>window.document.getElementById(&quot;frameId&quot;)</code>来访问这个frame对象；</p>\n<ul>\n<li>切换<code>frame</code>内容</li>\n</ul>\n<p>在IE浏览器和标准浏览器中都可以使用下面的方式来切换frame的内容；</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.document.getElementById(<span class=\"string\">\"testFrame\"</span>).src = <span class=\"string\">\"xxx.html\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.frameName.location = <span class=\"string\">\"xxx.html\"</span></span><br></pre></td></tr></table></div></figure>\n<p>34、建立单选钮</p>\n<p>标准浏览器：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var rdo = document.createElement(&apos;input&apos;); </span><br><span class=\"line\">rdo.setAttribute(&apos;type&apos;,&apos;radio&apos;); </span><br><span class=\"line\">rdo.setAttribute(&apos;name&apos;,&apos;radiobtn&apos;); </span><br><span class=\"line\">rdo.setAttribute(&apos;value&apos;,&apos;checked&apos;);</span><br></pre></td></tr></table></div></figure>\n<p>IE浏览器：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var rdo =document.createElement(”&lt;input name=”radiobtn” type=”radio” value=”checked” /&gt;”);</span><br></pre></td></tr></table></div></figure>\n<p>这一点区别和前面的都不一样。这次完全不同，所以找不到共同的办法来解决，那么只有<code>IF-ELSE</code>了<br>万幸的是，IE可以识别出<code>document的uniqueID</code>属性，别的浏览器都不可以识别出这一属性 </p>\n","prev":{"title":"less的基本使用","link":"2018/07/09/less的使用基本语法"},"next":{"title":"拜耳阵列-Bryce Bayer","link":"2018/07/05/Bryce Bayer"},"plink":"http://yoursite.com/2018/07/06/IE浏览器和标准浏览器的兼容性问题/"}