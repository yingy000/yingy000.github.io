{"title":"2-4-Git基础","date":"2018-08-04T16:10:35.000Z","link":"2018/08/05/2-4-Git基础","tags":["Git"],"categories":["前端"],"updated":"2018-10-12T14:48:43.273Z","content":"<h2 id=\"4-撤销操作\">4.撤销操作<a href=\"2018/08/05/2-4-Git基础#4-撤销操作\"></a></h2><p>在任何一个阶段，你都有可能想要撤消某些操作，但是有些撤销操作是不可逆的。</p>\n<p>有时我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。这时，可以运行带有<code>--amend</code>选项的提交命令尝试重新提交。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit --amend</span><br></pre></td></tr></table></div></figure>\n<p>该命令会将暂存区中的文件提交。如果自上次提交以来你还未做任何修改，那么快照会保持不变，而你所修改的只是提交信息。</p>\n<p>举例：你提交后发现忘记了暂存某些需要的修改，这时，就可以运用该命令了。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &apos;initial commit&apos;</span><br><span class=\"line\">$ git add forgotten_file.md</span><br><span class=\"line\">$ git commit --amend</span><br></pre></td></tr></table></div></figure>\n<p>最终你只会有一个提交 - 第二次提交将代替第一次提交的结果。</p>\n<h3 id=\"4-1-取消暂存的文件\">4.1.取消暂存的文件<a href=\"2018/08/05/2-4-Git基础#4-1-取消暂存的文件\"></a></h3><p>如果你已经修改了两个文件并且想要将它们作为两次独立的修改提交，但是却输入了<code>git add *</code>同时暂存了它们两个。如何只取消暂存两个中的一个呢？</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add *</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        new file:   one.html</span><br><span class=\"line\">        new file:   two.html</span><br></pre></td></tr></table></div></figure>\n<p>上述代码已经提示的很清楚，使用<code>&quot;git reset HEAD &lt;file&gt;...&quot;</code>来取消暂存文件。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git reset HEAD one.html</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        new file:   two.html</span><br><span class=\"line\">Changes not staged for commit:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class=\"line\">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">         new file: one.html</span><br></pre></td></tr></table></div></figure>\n<p>我们可以看到one.html文件已经被修改为未暂存的状态。</p>\n<h3 id=\"4-2-撤销对文件的修改\">4.2.撤销对文件的修改<a href=\"2018/08/05/2-4-Git基础#4-2-撤销对文件的修改\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Changes not staged for commit:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class=\"line\">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">         new file: one.html</span><br></pre></td></tr></table></div></figure>\n<p>如何撤销对文件的修改，也就是将它还原成上次提交时的样子（或者刚克隆完的样子，或者刚把它放入工作目录时的样子），我们还需要依照提示来做：使用<code>&quot;git checkout -- &lt;file&gt;...&quot;</code>来撤销对文件的修改。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -- one.html</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        new file:   one.html</span><br><span class=\"line\">        new file:   two.html</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"5-远程仓库的使用\">5.远程仓库的使用<a href=\"2018/08/05/2-4-Git基础#5-远程仓库的使用\"></a></h2><p>远程仓库是指托管在网络中的你的项目的版本库，你可以同时拥有多个远程仓库，通常有些仓库只读，有些既可以读也可以写。管理远程仓库包括了解如何添加远程仓库、移除无效的远程仓库、管理不同的远程分支并定义它们是否被跟踪等等。</p>\n<h3 id=\"5-1-查看远程仓库\">5.1.查看远程仓库<a href=\"2018/08/05/2-4-Git基础#5-1-查看远程仓库\"></a></h3><p><code>git remote</code>命令：列出你指定的每一个远程服务器的简写。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull origin master</span><br><span class=\"line\">remote: Counting objects: 3, done.</span><br><span class=\"line\">remote: Compressing objects: 100% (3/3), done.</span><br><span class=\"line\">Unpacking objects: 100% (3/3), done.</span><br><span class=\"line\">remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">From github.com:Alicesii/javascript-Object</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br><span class=\"line\">   6d95c79..d08bd5e  master     -&gt; origin/master</span><br><span class=\"line\">Updating 6d95c79..d08bd5e</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> README.md | 59 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\"> 1 file changed, 59 insertions(+)</span><br><span class=\"line\"> create mode 100644 README.md</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\">origin</span><br></pre></td></tr></table></div></figure>\n<p>origin是Git克隆的仓库服务器的默认名称。</p>\n<p>指定选项-v，会显示需要读写远程仓库使用的Git保存的简写与其对应的URL。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:Alicesii/javascript-Object.git (fetch)</span><br><span class=\"line\">origin  git@github.com:Alicesii/javascript-Object.git (push)</span><br></pre></td></tr></table></div></figure>\n<p>多人合作完成的项目，肯定拥有多个远程仓库，该命令会将它们全部列出。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">bakkdoor https://github.com/bakkdoor/grit (fetch)</span><br><span class=\"line\">bakkdoor https://github.com/bakkdoor/grit (push)</span><br><span class=\"line\">cho45 https://github.com/cho45/grit (fetch)</span><br><span class=\"line\">cho45 https://github.com/cho45/grit (push)</span><br><span class=\"line\">defunkt https://github.com/defunkt/grit (fetch)</span><br><span class=\"line\">defunkt https://github.com/defunkt/grit (push)</span><br><span class=\"line\">koke git://github.com/koke/grit.git (fetch)</span><br><span class=\"line\">koke git://github.com/koke/grit.git (push)</span><br><span class=\"line\">origin git@github.com:mojombo/grit.git (fetch)</span><br><span class=\"line\">origin git@github.com:mojombo/grit.git (push)</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"5-2-添加远程仓库\">5.2.添加远程仓库<a href=\"2018/08/05/2-4-Git基础#5-2-添加远程仓库\"></a></h3><p><code>git remote add &lt;shortname&gt; &lt;url&gt;</code>：添加一个新的远程Git仓库。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote</span><br><span class=\"line\">origin</span><br><span class=\"line\">$ git remote add Ades https://github.com/Alicesii/blog</span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\">Ades    https://github.com/Alicesii/blog (fetch)</span><br><span class=\"line\">Ades    https://github.com/Alicesii/blog (push)</span><br><span class=\"line\">origin  git@github.com:Alicesii/javascript-Object.git (fetch)</span><br><span class=\"line\">origin  git@github.com:Alicesii/javascript-Object.git (push)</span><br></pre></td></tr></table></div></figure>\n<p>可以在命令行中使用字符串Ades来代替整个URL。例如，如果你想拉取blog的仓库但是没有它的URL信息，就可以运行<code>git pull Ades</code>。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull Ades</span><br><span class=\"line\">remote: Counting objects: 119, done.</span><br><span class=\"line\">remote: Compressing objects: 100% (113/113), done.</span><br><span class=\"line\">Receiving objects:  7remote: Total 119 (delta 34), reused 72 (delta 6), pack-reused 0</span><br><span class=\"line\">Receiving objects: 100% (119/119), 284.63 KiB | 164.00 KiB/s, done.</span><br><span class=\"line\">Resolving deltas: 100% (34/34), done.</span><br><span class=\"line\">From https://github.com/Alicesii/blog</span><br><span class=\"line\"> * [new branch]      master     -&gt; Ades/master</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"5-3-从远程仓库中抓取与拉取\">5.3.从远程仓库中抓取与拉取<a href=\"2018/08/05/2-4-Git基础#5-3-从远程仓库中抓取与拉取\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull [remote-name]</span><br></pre></td></tr></table></div></figure>\n<p>该命令会访问远程仓库，从中拉取所有本地仓库中没有的数据。执行完成后，你将会拥有该远程仓库中所有分支的引用，可以随时合并或查看。</p>\n<p>git pull命令会将数据拉取到你的本地仓库，它并不会自动合并或修改你当前的工作。</p>\n<h3 id=\"5-4-推送到远程仓库\">5.4.推送到远程仓库<a href=\"2018/08/05/2-4-Git基础#5-4-推送到远程仓库\"></a></h3><p><code>git push [remote-name] [branch-name]</code>命令：将项目推送到远程服务器。</p>\n<p>我们最常使用的是将master分支推送到origin服务器上。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin master</span><br></pre></td></tr></table></div></figure>\n<p>只有当你有所克隆服务器的写入权限，并且之前没有人推送过时，这条命令才能生效。 当你和其他人在同一时间克隆，他们先推送到服务器然后你再推送，你的推送就会毫无疑问地被拒绝。你必须先将他们的工作拉取下来并将其合并进你的工作后才能推送。</p>\n<h3 id=\"5-5-查看远程仓库\">5.5.查看远程仓库<a href=\"2018/08/05/2-4-Git基础#5-5-查看远程仓库\"></a></h3><p><code>git remote show [remote-name]</code>命令：查看某一个远程仓库的更多信息。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote show origin</span><br><span class=\"line\">* remote origin</span><br><span class=\"line\">  Fetch URL: git@github.com:Alicesii/Git.git</span><br><span class=\"line\">  Push  URL: git@github.com:Alicesii/Git.git</span><br><span class=\"line\">  HEAD branch: master</span><br><span class=\"line\">  Remote branch:</span><br><span class=\"line\">    master tracked</span><br><span class=\"line\">  Local branch configured for &apos;git pull&apos;:</span><br><span class=\"line\">    master merges with remote master</span><br><span class=\"line\">  Local ref configured for &apos;git push&apos;:</span><br><span class=\"line\">    master pushes to master (up to date)</span><br></pre></td></tr></table></div></figure>\n<p>该命令会列出远程仓库的URL与跟踪分支的信息。</p>\n<h3 id=\"5-6-远程仓库的移除与重命名\">5.6.远程仓库的移除与重命名<a href=\"2018/08/05/2-4-Git基础#5-6-远程仓库的移除与重命名\"></a></h3><p><code>git remote rename</code>命令：重命名远程仓库的简写名称。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add Ades https://github.com/Alicesii/blog</span><br><span class=\"line\">$ git remote rename Ades Bdes</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\">Bdes</span><br><span class=\"line\">origin</span><br></pre></td></tr></table></div></figure>\n<p><code>git remote rm</code>命令：移除一个远程仓库</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote rm Bdes</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\">origin</span><br></pre></td></tr></table></div></figure>","prev":{"title":"2-5-Git基础","link":"2018/08/07/2-5-Git基础"},"next":{"title":"2-3-Git基础","link":"2018/08/04/2-3-Git基础"},"plink":"http://yoursite.com/2018/08/05/2-4-Git基础/","toc":[{"title":"4.撤销操作","id":"4-撤销操作","index":"1","children":[{"title":"4.1.取消暂存的文件","id":"4-1-取消暂存的文件","index":"1.1"},{"title":"4.2.撤销对文件的修改","id":"4-2-撤销对文件的修改","index":"1.2"}]},{"title":"5.远程仓库的使用","id":"5-远程仓库的使用","index":"2","children":[{"title":"5.1.查看远程仓库","id":"5-1-查看远程仓库","index":"2.1"},{"title":"5.2.添加远程仓库","id":"5-2-添加远程仓库","index":"2.2"},{"title":"5.3.从远程仓库中抓取与拉取","id":"5-3-从远程仓库中抓取与拉取","index":"2.3"},{"title":"5.4.推送到远程仓库","id":"5-4-推送到远程仓库","index":"2.4"},{"title":"5.5.查看远程仓库","id":"5-5-查看远程仓库","index":"2.5"},{"title":"5.6.远程仓库的移除与重命名","id":"5-6-远程仓库的移除与重命名","index":"2.6"}]}]}