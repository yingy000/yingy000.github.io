{"title":"3-字符换的链接","date":"2018-04-30T10:18:45.000Z","link":"2018/04/30/3-字符串的连接","tags":["JavaScript"],"categories":["前端"],"updated":"2018-10-12T14:48:01.452Z","content":"<h2 id=\"字符串链接性能问题\">字符串链接性能问题<a href=\"2018/04/30/3-字符串的连接#字符串链接性能问题\"></a></h2><h3 id=\"1-第一种方式：利用运算符-quot-quot\">1.第一种方式：利用运算符<code>&quot;+&quot;</code><a href=\"2018/04/30/3-字符串的连接#1-第一种方式：利用运算符-quot-quot\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var str=&quot;hello&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">str=str+&quot;world&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(str);   //helloworld</span><br></pre></td></tr></table></div></figure>\n<p>执行的步骤：</p>\n<ul>\n<li><p>1.创建存储”hello”的字符串</p>\n</li>\n<li><p>2.创建存储”world”的字符串</p>\n</li>\n<li><p>3.创建存储连接结果的字符串</p>\n</li>\n<li><p>4.把str的当前内容复制到结果中</p>\n</li>\n<li><p>5.把”world”复制到结果中</p>\n</li>\n<li><p>6.更新str，使它指向结果。</p>\n</li>\n</ul>\n<p>每次完成字符串连接都会执行步骤2~6，使得这种操作非常消耗资源，如果重复这一过程几百次，甚至几千次，就会造成性能问题。</p>\n<h3 id=\"2-第二种方式：join-方法\">2.第二种方式：join()方法<a href=\"2018/04/30/3-字符串的连接#2-第二种方式：join-方法\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr=new Array();</span><br><span class=\"line\">arr[0]=&quot;a&quot;;</span><br><span class=\"line\">arr[1]=&quot;b&quot;;</span><br><span class=\"line\">var str=arr.join(&quot;&quot;);</span><br><span class=\"line\">console.log(str);  //ab</span><br></pre></td></tr></table></div></figure>\n<p>执行的步骤：</p>\n<ul>\n<li><p>1、创建存储结果的字符串</p>\n</li>\n<li><p>2、把每个字符串复制到结果中的合适位置</p>\n</li>\n</ul>\n<h3 id=\"3-第三种方式：StringBuffer类\">3.第三种方式：StringBuffer类<a href=\"2018/04/30/3-字符串的连接#3-第三种方式：StringBuffer类\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function StringBuffer()&#123;</span><br><span class=\"line\">\tthis.__string__=new Array();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">StringBuffer.prototype.append=function(str)&#123;</span><br><span class=\"line\">\tthis.__string__.push(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">StringBuffer.prototype.toString=function()&#123;</span><br><span class=\"line\">\treturn this.__string__.join(&quot;&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>string属性是私有属性，StringBuffer类有两个方法append()方法和toString()方法，append()方法有一个参数，它把该参数附加到字符串数组中，toString()方法调用数组的join()方法，返回真正连接成的字符串。我们可以测试一下。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var str=new StringBuffer();</span><br><span class=\"line\"></span><br><span class=\"line\">str.append(&quot;hello&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">str.append(&quot;world&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">var result=str.toString();</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(result);  //helloworld</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"4-检测性能\">4.检测性能<a href=\"2018/04/30/3-字符串的连接#4-检测性能\"></a></h3><p>我们可以检测一下StringBuffer对象和传统的字符串连接方法的性能。</p>\n<p>传统的连接方法：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var d1=new Date();</span><br><span class=\"line\">var time1=d1.getTime();</span><br><span class=\"line\">var str=&quot;&quot;;</span><br><span class=\"line\">for(var i=0;i&lt;10000;i++)&#123;</span><br><span class=\"line\">\tstr=str+&quot;hello&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var d2=new Date();</span><br><span class=\"line\">var time2=d2.getTime();</span><br><span class=\"line\">console.log(&quot;程序运行的时长为&quot;+(time2-time1)+&quot;秒&quot;);  //程序运行的时长为18秒</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>StringBuffer对象：</li>\n</ul>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function StringBuffer()&#123;</span><br><span class=\"line\">\tthis.__string__=new Array();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">StringBuffer.prototype.append=function(str)&#123;</span><br><span class=\"line\">\tthis.__string__.push(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">StringBuffer.prototype.toString=function()&#123;</span><br><span class=\"line\">\treturn this.__string__.join(&quot;&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var str=new StringBuffer();</span><br><span class=\"line\">var d1=new Date();</span><br><span class=\"line\">var time1=d1.getTime();</span><br><span class=\"line\">for(var i=0;i&lt;10000;i++)&#123;</span><br><span class=\"line\">\tstr.append(&quot;hello&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var result=str.toString();</span><br><span class=\"line\">var d2=new Date();</span><br><span class=\"line\">var time2=d2.getTime();</span><br><span class=\"line\">console.log(&quot;程序运行的时长为&quot;+(time2-time1)+&quot;秒&quot;);  //程序运行的时长为7秒</span><br></pre></td></tr></table></div></figure>\n<p>注意：创建新Date对象时，如果没有参数，赋予对象的是当前的日期与时间。要计算连接操作历经多少时间，把日期的毫秒表示(getTime()方法的返回值)相减即可。</p>\n","prev":{"title":"4-继承的实现","link":"2018/05/04/4-继承的实现"},"next":{"title":"3-修改对象","link":"2018/04/27/3-修改对象"},"plink":"http://yoursite.com/2018/04/30/3-字符串的连接/","toc":[{"title":"字符串链接性能问题","id":"字符串链接性能问题","index":"1","children":[{"title":"1.第一种方式：利用运算符<code>&quot;+&quot;</code>","id":"1-第一种方式：利用运算符-quot-quot","index":"1.1"},{"title":"2.第二种方式：join()方法","id":"2-第二种方式：join-方法","index":"1.2"},{"title":"3.第三种方式：StringBuffer类","id":"3-第三种方式：StringBuffer类","index":"1.3"},{"title":"4.检测性能","id":"4-检测性能","index":"1.4"}]}]}