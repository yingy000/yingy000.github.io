{"title":"2-转换","date":"2018-04-12T11:19:09.000Z","link":"2018/04/12/2-转换","tags":["JavaScript"],"categories":["前端"],"updated":"2018-10-12T14:48:24.593Z","content":"<h2 id=\"1-转换\">1.转换<a href=\"2018/04/12/2-转换#1-转换\"></a></h2><p>原始类型的值的转化</p>\n<h3 id=\"1-1-转换成字符串\">1.1.转换成字符串<a href=\"2018/04/12/2-转换#1-1-转换成字符串\"></a></h3><p>我们首先应该知道原始值Boolean、Number、String字符串都是伪对象，也就是说它们具有Object对象的属性和方法。</p>\n<p>举例：获取字符串的长度：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var color=&quot;red&quot;</span><br><span class=\"line\">color.length //3</span><br></pre></td></tr></table></div></figure>\n<p>所以，我们应该记住原始值Boolean、Number和String字符串都有<code>toString()</code>方法。</p>\n<ul>\n<li>Bollean类型的toString()方法只是输出”true”或者”false”，结果由变量的值决定。</li>\n</ul>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var val=true;</span><br><span class=\"line\">val.toString;  //ƒ toString() &#123; [native code] &#125;</span><br><span class=\"line\">val.toString();  //&quot;true&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var val=false;</span><br><span class=\"line\">val.toString;   //ƒ toString() &#123; [native code] &#125;</span><br><span class=\"line\">val.toString()  //&quot;false&quot;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>Number类型的<code>toString()</code>方法有两种模式：默认模式和基模式。</li>\n</ul>\n<p>默认模式：无论最初采用什么表示法声明数字，Number类型的<code>toSring()</code>方法都是数字的十进制表示，也就是说，以八进制或十六进制字面量形式声明的数字输出时都是十进制形式的。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var inum=10;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString()  //&quot;10&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var inum=10.0;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString()  //&quot;10&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var inum=070;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString()  //&quot;56&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var inum=0xab;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString()   //&quot;171&quot;</span><br></pre></td></tr></table></div></figure>\n<p>基模式：可以用不同的基输出数字，例如二进制的基为2，八进制的基为8，十六进制的基为16，基是<code>toStiring()</code>方法的参数。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var inum=10;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString(16)  //&quot;a&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString(10)  //&quot;10&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">inum.toString(2)   //&quot;1010&quot;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"1-2-转换成数字\">1.2.转换成数字<a href=\"2018/04/12/2-转换#1-2-转换成数字\"></a></h3><p><code>parseInt()</code>：把非数字的原始值转换成整数。</p>\n<p>parseInt()方法首先查看位置0处的字符，判断它是否是个有效数字;如果不是,该方法返回将返回NaN,不再继续执行其他操作。但如果该字符是有效字符，将继续查看位置1处的字符，进行同样的测试，这一过程将持续到发现第一个非有效数字的字符为止。此时parseInt()将把该字符之前的字符串转换成数字。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parseInt(&quot;3434frfr&quot;)  //3434</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&quot;0xA&quot;)   //10</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&quot;25.7&quot;)  //25</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&quot;hththf&quot;)  //NaN</span><br></pre></td></tr></table></div></figure>\n<p><code>parseInt()</code>方法同样有基模式,基是由该方法的第二个参数指定的。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parseInt(&apos;DA&apos;,16)  //218</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&apos;100&apos;,8) //64</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&apos;100&apos;,2)  //4</span><br><span class=\"line\"></span><br><span class=\"line\">parseInt(&apos;100&apos;,10) //100</span><br></pre></td></tr></table></div></figure>\n<p><code>parseFloat()</code>：把非数字的原始值转换成浮点数</p>\n<p><code>parseFloat():</code>首先查看位置0处的字符，这一过程将持续到发现第一个非有效数字的字符为止，然后把该字符之前的字符串转换成数字，比较特殊的是，第一个出现的小数点是有效字符，如果有两个小数点，第二个小数点将被看做是无效的。</p>\n<p><code>parseFloat()</code>方法没有基模式，该方法的字符串必须是以十进制形式表示的浮点数，而不存在二进制、八进制或者十六进制的形式，并且该方法会返回前导0。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parseFloat(&apos;45.6.7&apos;) //45.6</span><br><span class=\"line\"></span><br><span class=\"line\">parseFloat(&apos;deedef&apos;) //NaN</span><br><span class=\"line\"></span><br><span class=\"line\">parseFloat(&apos;0786&apos;)  //786</span><br><span class=\"line\"></span><br><span class=\"line\">parseFloat(&apos;373dheude&apos;) //373</span><br><span class=\"line\"></span><br><span class=\"line\">parseFloat(&apos;77.5&apos;) //77.5</span><br><span class=\"line\"></span><br><span class=\"line\">parseFloat(&apos;0xA&apos;)   //NaN</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"1-3-强制类型转换\">1.3.强制类型转换<a href=\"2018/04/12/2-转换#1-3-强制类型转换\"></a></h3><p><code>Boolean():</code>把给定的值转换成Boolean型</p>\n<p>当要转换的值是至少有一个字符的字符串、非0数字或对象时，Boolean()函数将返回true。如果该值是空字符串、数字0、undefined或null时，它将返回0。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var Boolean(1)  //true</span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(&quot;a&quot;)  //true</span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(&quot;new Object()&quot;)  //true</span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(&apos;&apos;)  //false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(null) //false</span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(0)  //false</span><br><span class=\"line\"></span><br><span class=\"line\">Boolean(undefined)  //false</span><br></pre></td></tr></table></div></figure>\n<p><code>Number()</code>：把给定的值转换成数字</p>\n<p><code>Number()</code>的强制类型转换与<code>parseInt()</code>和<code>parseFloat()</code>的处理过程相似，只是它的转换’对象’是整个值而不是部分值，也就是说，它不会舍弃部分值，而是当做整体对待。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Number(3.2)   //3.2</span><br><span class=\"line\"></span><br><span class=\"line\">Number(&apos;3.2.1&apos;)  //NaN</span><br><span class=\"line\"></span><br><span class=\"line\">Number(100)   //100</span><br><span class=\"line\"></span><br><span class=\"line\">Number(&apos;32&apos;)  //32</span><br><span class=\"line\"></span><br><span class=\"line\">#Number(new Object()) //NaN</span><br><span class=\"line\"></span><br><span class=\"line\">Number(false)  //0</span><br><span class=\"line\"></span><br><span class=\"line\">Number(true)   //1</span><br><span class=\"line\"></span><br><span class=\"line\">Number(null)   //0</span><br><span class=\"line\"></span><br><span class=\"line\">Number(undefined)  //NaN</span><br></pre></td></tr></table></div></figure>\n<p><code>String()</code>：把给定的值转换成字符串。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String(1)   //&quot;1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">String(true)  //&quot;true&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">String(&quot;1.099&quot;)  //&quot;1.099&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">String(&quot;-34.4&quot;)  //&quot;-34.4&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">String(null)  //&quot;null&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">String(undefined) //&quot;undefined&quot;</span><br></pre></td></tr></table></div></figure>","prev":{"title":"2-运算符","link":"2018/04/15/2-运算符"},"next":{"title":"2-语句","link":"2018/04/09/2-语句"},"plink":"http://yoursite.com/2018/04/12/2-转换/","toc":[{"title":"1.转换","id":"1-转换","index":"1","children":[{"title":"1.1.转换成字符串","id":"1-1-转换成字符串","index":"1.1"},{"title":"1.2.转换成数字","id":"1-2-转换成数字","index":"1.2"},{"title":"1.3.强制类型转换","id":"1-3-强制类型转换","index":"1.3"}]}]}