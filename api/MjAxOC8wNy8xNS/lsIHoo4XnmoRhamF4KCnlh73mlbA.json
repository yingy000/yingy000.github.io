{"title":"ajax()函数的封装","date":"2018-07-15T10:33:45.000Z","link":"2018/07/15/封装的ajax()函数","tags":["AJAX"],"categories":["前端"],"updated":"2019-08-25T12:56:24.014Z","content":"<h2 id=\"1-封装一个自己的ajax-方法-减少代码的重复，不然每次都要重复的写一些相同的代码。\">1.封装一个自己的<code>ajax()</code>方法,减少代码的重复，不然每次都要重复的写一些相同的代码。<a href=\"2018/07/15/封装的ajax()函数#1-封装一个自己的ajax-方法-减少代码的重复，不然每次都要重复的写一些相同的代码。\"></a></h2><p>一般情况下，我们如果要把一个功能封装成一个函数，应该怎么去构想呢？？？</p>\n<p>我们首先需要确定这个函数有几个参数？</p>\n<p><code>url,get/post,data</code>我们可能需要这三个参数</p>\n<p>正常的思路：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function ajax(url,type,data,callback)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>需要一个回调函数来执行获取到数据之后的操作。</p>\n<p>但是我们又嫌弃函数的参数名字太长了，我们可以改成这样的形式</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj=&#123;</span><br><span class=\"line\">\turl:&apos;&apos;,</span><br><span class=\"line\">\ttype:&apos;&apos;,</span><br><span class=\"line\">\tdata:&apos;&apos;,</span><br><span class=\"line\">\tcallback:function()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function ajax(options)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ajax(obj); //调用ajax()函数</span><br></pre></td></tr></table></div></figure>\n<p>这种思路往往是被采用的，和第一种写法比较,有什么好处呢？</p>\n<p>我们可以看出第二种方法明显的更简洁一些，并且第一种方式的参数的位置是被固定死的，第二种方式参数的位置可以很灵活。</p>\n<p>我们还有一个问题，如果你写了一个函数为<code>function ajax(){},</code>但是你的同事并不知道你占用了这个名字，它也写了个函数叫<code>function ajax(){}</code>,如果这两个函数加载到同一个页面，其中的一个肯定会被覆盖的，我们怎么解决这个问题呢？怎么解决命名冲突问题呢？</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//命名冲突</span><br><span class=\"line\">function ajax()&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function ajax()&#123;&#125;</span><br></pre></td></tr></table></div></figure>\n<p>解决办法：我们把函数封装到一个对象内部中</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;</span><br><span class=\"line\">\tajax:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.ajax()  <span class=\"comment\">//调用ajax()方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//另一个同事</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1=&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tajax:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj1.ajax()  <span class=\"comment\">//调用ajax()方法</span></span><br></pre></td></tr></table></div></figure>\n<p>这样就解决了函数命名冲突问题.(把函数封装在一个对象内部)，专业一点来说就是采用命名空间的方式来解决函数命名冲突问题。</p>\n<p><strong>怎么使用命名空间？：定义一个全局的对象，把方法绑到这个全局对象的下面。</strong></p>\n<p>我们现在就可以动手来写了：</p>\n<p>所需要的参数：<code>url,get/post,data</code></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var $ = &#123;</span><br><span class=\"line\">    //处理data的格式</span><br><span class=\"line\">\tparams: function(data) &#123;</span><br><span class=\"line\">\t    var res=&apos;&apos;;</span><br><span class=\"line\">\t    for(var key in data)&#123;</span><br><span class=\"line\">\t    res += key+ &apos;=&apos; +data[key]+ &apos;&amp;&apos;;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t  return res.slice(0,-1);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tajax: function(options) &#123;</span><br><span class=\"line\">\t\t//传参数</span><br><span class=\"line\">\t\t//传给函数的地址||默认的当前地址</span><br><span class=\"line\">\t\tvar url = options.url || location.pathname;</span><br><span class=\"line\">\t\t//传给函数的请求方法||默认的请求方式</span><br><span class=\"line\">\t\tvar type = options.type || &apos;get&apos;;</span><br><span class=\"line\">\t\t//定义一个方法params()处理数据格式</span><br><span class=\"line\">\t\tvar data = this.params(options.data);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>经过以前的案例学习，我们可以知道经过post方式发送的数据的格式一般是<code>xhr.send(&quot;name=yang&amp;age=18&quot;)</code>这样的，但是调用的时候我们是这样的<code>data:{name:Asici,age:18}</code>,这样的形式是不匹配的，所以在ajax()函数中我们需要处理一下data数据的格式。</p>\n<p>函数的调用</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">\turl: &apos;01.php&apos;,</span><br><span class=\"line\">\ttype: &apos;post&apos;,</span><br><span class=\"line\">\tdata: &#123;</span><br><span class=\"line\">\t\tname: &apos;Asic&apos;,</span><br><span class=\"line\">\t\tage:  &apos;18&apos;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tsuccess: function(data) &#123;</span><br><span class=\"line\">\t\tconsole.log(data);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\terror: function(err) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n<p>我们现在封装的<code>params()</code>可以达到我们的效果吗？</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">var</span> res=<span class=\"string\">''</span>;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> data)&#123;</span><br><span class=\"line\">\t    res += key+ <span class=\"string\">'='</span> +data[key]+ <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></div></figure>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_1.png\" alt=\"\" class=\"article-img\"></p>\n<p>通过上图我们可以发现最后多了一个&amp;符号,还是不太符合要求，我们需要在修改一下。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">var</span> res=<span class=\"string\">''</span>;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> data)&#123; </span><br><span class=\"line\">\t    res += key+ <span class=\"string\">'='</span> +data[key]+ <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t  <span class=\"keyword\">return</span> res.slice(<span class=\"number\">0</span>,<span class=\"number\">-1</span>);</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(res.slice(<span class=\"number\">0</span>,<span class=\"number\">-1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_2.png\" alt=\"\" class=\"article-img\"></p>\n<p>这样就达到了我们想要的效果了。</p>\n<p>封装好了所需要的函数，现在就需要实例化了。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">\t&lt;head&gt;</span><br><span class=\"line\">\t\t&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;title&gt;&lt;/title&gt;</span><br><span class=\"line\">\t\t&lt;script&gt;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> $ = &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//格式化参数</span></span><br><span class=\"line\">\t\t\t\tparams: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> res = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres += key + <span class=\"string\">'='</span> + data[key] + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> res.slice(<span class=\"number\">0</span>,<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tajax: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//传参数</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//获取请求的地址||默认的当前地址</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> url = options.url || location.pathname;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//获取请求方式||默认的请求方式</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> type = options.type || <span class=\"string\">'get'</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//定义一个方法params()处理数据格式(格式化参数)</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> data = <span class=\"keyword\">this</span>.params(options.data);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//实例化XMLHttpRequest</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> XMLHttpRequest;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//判断以get形式请求</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(type==<span class=\"string\">'get'</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\turl = url + <span class=\"string\">'?'</span> + data;</span><br><span class=\"line\">\t\t\t\t\t\tdata=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//发起一个请求</span></span><br><span class=\"line\">                   xhr.open(type,url);</span><br><span class=\"line\">                    <span class=\"comment\">//以post形式的时候需要设置文档类型</span></span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(type==<span class=\"string\">'post'</span>)</span><br><span class=\"line\">                   &#123;</span><br><span class=\"line\">                   \t  xhr.setRequestHeader(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'application/x-www-form-urlencoded'</span>)</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">                   <span class=\"comment\">//发送请求主体</span></span><br><span class=\"line\">                   xhr.send(data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: <span class=\"string\">'01.php'</span>,</span><br><span class=\"line\">\t\t\t\ttype: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\tname: <span class=\"string\">'Asic'</span>,</span><br><span class=\"line\">\t\t\t\t\tage: <span class=\"string\">'18'</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tsuccess: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\terror: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>head&gt;</span><br><span class=\"line\">\t&lt;body&gt;</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></div></figure>\n<p>基本的封装已经好了，就只差事件监听了，我们先在浏览器中测试一下，看目前的封装有没有问题。</p>\n<p>post请求方式：</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_3.png\" alt=\"\" class=\"article-img\"></p>\n<p>get请求方式</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_4.png\" alt=\"\" class=\"article-img\"></p>\n<p>大家可能不太知道<code>location.pathname</code>是什么，我来说一下</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_5.png\" alt=\"\" class=\"article-img\"></p>\n<p><code>location</code>对象有很多的属性，<code>location.pathname</code>是获取当前页面的地址信息，还有很多其他属性，大家都可以看下。</p>\n<p>我们接下来就要封装<code>onreadystatechange()</code>方法</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhr.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xhr.readyState==<span class=\"number\">4</span>&amp;&amp;xhr.status==<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></div></figure>\n<p>在<code>XMLHttpRequest</code>中有这样一些方法：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(xhr.getAllResponseHeaders())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(xhr.getResponseHeader(<span class=\"string\">'content-type'</span>));</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li><code>getAllResponseHeaders</code>:获取响应的所有http头</li>\n</ul>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_6.png\" alt=\"\" class=\"article-img\"></p>\n<ul>\n<li><code>getResponseHeader</code>：从响应信息中获取指定的http头</li>\n</ul>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_7.png\" alt=\"\" class=\"article-img\"></p>\n<ul>\n<li><p><code>xhr.responseText</code></p>\n</li>\n<li><p><code>xhr.responseXML</code></p>\n</li>\n</ul>\n<p>因为可能获取到不同类型的数据所以我们要分情况对待,我们需要知道当前返回的到底是什么类型的数据，一般情况下我们都希望返回的是<code>JSON</code>数据(字符串)，继续封装吧。</p>\n<p>完整的封装版。</p>\n<ul>\n<li><code>ajax.js</code></li>\n</ul>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $ = &#123;</span><br><span class=\"line\">\tparams: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> res = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">\t\t\tres += key + <span class=\"string\">'='</span> + data[key] + <span class=\"string\">'&amp;'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> res.slice(<span class=\"number\">0</span>,<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tajax: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//传参数</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//传给函数的地址||默认的当前地址</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> url = options.url || location.pathname;</span><br><span class=\"line\">\t\t<span class=\"comment\">//传给函数的请求方法||默认的请求方式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> type = options.type || <span class=\"string\">'get'</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义一个方法params()处理数据格式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> data = <span class=\"keyword\">this</span>.params(options.data);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> xhr=<span class=\"keyword\">new</span> XMLHttpRequest;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(type==<span class=\"string\">'get'</span>)&#123;</span><br><span class=\"line\">\t\t\t\turl = url + <span class=\"string\">'?'</span> + data;</span><br><span class=\"line\">\t\t\t\tdata=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">                xhr.open(type,url);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type==<span class=\"string\">'post'</span>)</span><br><span class=\"line\">                   &#123;</span><br><span class=\"line\">                   \t xhr.setRequestHeader(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'application/x-www-form-urlencoded'</span>)</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">                xhr.send(data);</span><br><span class=\"line\">                xhr.onreadystatechange=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(xhr.readyState==<span class=\"number\">4</span>&amp;&amp;xhr.status==<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> ct=xhr.getResponseHeader(<span class=\"string\">'content-type'</span>);</span><br><span class=\"line\">                     <span class=\"comment\">//indexOf()判断ct中是不是有json这个字符串，返回值为该字符串的起始位置。</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(ct.indexOf(<span class=\"string\">'json'</span>)!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//将JSON格式的字符串转化成JavaScript对象parse()</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> data=<span class=\"built_in\">JSON</span>.parse(xhr.responseText); </span><br><span class=\"line\">                    <span class=\"comment\">//接下来就要交给回调函数工作了</span></span><br><span class=\"line\">                    options.success(data);</span><br><span class=\"line\">                 &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               options.error()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li><code>01.php</code></li>\n</ul>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\theader(&apos;Content-Type:application/json; charset=utf-8&apos;);</span><br><span class=\"line\">\techo json_encode($_REQUEST);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></div></figure>\n<p>测试：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">\t&lt;head&gt;</span><br><span class=\"line\">\t\t&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;title&gt;&lt;/title&gt;</span><br><span class=\"line\">\t\t&lt;script src=<span class=\"string\">\"ajax.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">\t\t&lt;script&gt;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: <span class=\"string\">'01.php'</span>,</span><br><span class=\"line\">\t\t\t\ttype: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\tname: <span class=\"string\">'Asic'</span>,</span><br><span class=\"line\">\t\t\t\t\tage: <span class=\"string\">'18'</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tsuccess: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\terror: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>head&gt;</span><br><span class=\"line\">\t&lt;body&gt;</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></div></figure>\n<p>测试结果：</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_8.png\" alt=\"\" class=\"article-img\"></p>\n<p>缺点：到目前为止，这个封装的小工具其实只考虑了部分情况，比如说数据格式只能是<code>JSON</code>形式的，在实际情况中，其实还可能是<code>XML</code>数据格式的，这种情况其实我们都没有考虑，只是把一些常用的一些操作封装了，许多地方还有优化的可能，这里先不说了。</p>\n<p>那我们来测试一下，我们封装的这个到底好用不好用。</p>\n<ul>\n<li>index.html</li>\n</ul>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">\t&lt;title&gt;<span class=\"built_in\">JSON</span>&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;style&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\ttable &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t\twidth: 300px;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t\tborder-collapse: collapse;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\ttd &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t\theight: 40px;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t\ttext-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t\tborder: 1px solid #CCC;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>style&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/head&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;table&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>table&gt;</span><br><span class=\"line\">\t&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"btn\"</span>&gt;&lt;input type=\"button\" value=\"获取数据\"&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;script src=<span class=\"string\">\"ajax.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: <span class=\"string\">'stars.php'</span>,</span><br><span class=\"line\">\t\t\t\ttype: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\ttest:<span class=\"string\">'test ajax tools'</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tsuccess: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\terror: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li><code>stars.json</code></li>\n</ul>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&quot;name&quot;: &quot;王力宏&quot;,</span><br><span class=\"line\">\t\t&quot;photo&quot;: &quot;./images/wlh.jpg&quot;,</span><br><span class=\"line\">\t\t&quot;ablum&quot;: &quot;&lt;&lt;改变自已&gt;&gt;&quot;,</span><br><span class=\"line\">\t\t&quot;age&quot;: 39,</span><br><span class=\"line\">\t\t&quot;sex&quot;: &quot;男&quot;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&quot;name&quot;: &quot;王力宏&quot;,</span><br><span class=\"line\">\t\t&quot;photo&quot;: &quot;./images/wlh.jpg&quot;,</span><br><span class=\"line\">\t\t&quot;ablum&quot;: &quot;&lt;&lt;改变自已&gt;&gt;&quot;,</span><br><span class=\"line\">\t\t&quot;age&quot;: 39,</span><br><span class=\"line\">\t\t&quot;sex&quot;: &quot;男&quot;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&quot;name&quot;: &quot;王力宏&quot;,</span><br><span class=\"line\">\t\t&quot;photo&quot;: &quot;./images/wlh.jpg&quot;,</span><br><span class=\"line\">\t\t&quot;ablum&quot;: &quot;&lt;&lt;改变自已&gt;&gt;&quot;,</span><br><span class=\"line\">\t\t&quot;age&quot;: 39,</span><br><span class=\"line\">\t\t&quot;sex&quot;: &quot;男&quot;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&quot;name&quot;: &quot;王力宏&quot;,</span><br><span class=\"line\">\t\t&quot;photo&quot;: &quot;./images/wlh.jpg&quot;,</span><br><span class=\"line\">\t\t&quot;ablum&quot;: &quot;&lt;&lt;改变自已&gt;&gt;&quot;,</span><br><span class=\"line\">\t\t&quot;age&quot;: 39,</span><br><span class=\"line\">\t\t&quot;sex&quot;: &quot;男&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li><code>stars.php</code></li>\n</ul>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\t// 指定文档类型</span><br><span class=\"line\">\theader(&apos;Content-Type:application/json; charset=utf-8&apos;);</span><br><span class=\"line\">\t$result = file_get_contents(&apos;stars.json&apos;);</span><br><span class=\"line\">\techo $result;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></div></figure>\n<p>运行结果:</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_9.png\" alt=\"\" class=\"article-img\"></p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_10.png\" alt=\"\" class=\"article-img\"></p>\n<p>说明我们的封装基本是正确的，那我们利用自己封装的函数看能不能实现和以前一样的效果。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">\t&lt;head&gt;</span><br><span class=\"line\">\t\t&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">\t\t&lt;title&gt;JSON&lt;/title&gt;</span><br><span class=\"line\">\t\t&lt;style&gt;</span><br><span class=\"line\">\t\t\ttable &#123;</span><br><span class=\"line\">\t\t\t\twidth: 300px;</span><br><span class=\"line\">\t\t\t\tborder-collapse: collapse;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ttd &#123;</span><br><span class=\"line\">\t\t\t\theight: 40px;</span><br><span class=\"line\">\t\t\t\ttext-align: center;</span><br><span class=\"line\">\t\t\t\tborder: 1px solid #CCC;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;/head&gt;</span><br><span class=\"line\">\t&lt;body&gt;</span><br><span class=\"line\">\t\t&lt;table&gt;</span><br><span class=\"line\">\t\t&lt;/table&gt;</span><br><span class=\"line\">\t\t&lt;script src=&quot;ajax.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">\t\t&lt;script&gt;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: &apos;stars.php&apos;,</span><br><span class=\"line\">\t\t\t\ttype: &apos;post&apos;,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\ttest: &apos;test ajax tools&apos;</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tsuccess: function(data) &#123;</span><br><span class=\"line\">\t\t\t\t\tvar html = &apos;&apos;;</span><br><span class=\"line\">\t\t\t\t\tfor(var i = 0; i &lt; data.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;tr&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;td&gt;&apos; + data[i].name + &apos;&lt;/td&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;td&gt;&apos; + data[i].ablum + &apos;&lt;/td&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;td&gt;&apos; + data[i].age + &apos;&lt;/td&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;td&gt;&apos; + data[i].sex + &apos;&lt;/td&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t\thtml += &apos;&lt;/tr&gt;&apos;;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tdocument.querySelector(&apos;table&apos;).innerHTML = html;</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\terror: function(err) &#123;&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&lt;/script&gt;</span><br><span class=\"line\">\t&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1240927/o_11.png\" alt=\"\" class=\"article-img\"></p>\n","prev":{"title":"服务器基础知识","link":"2018/07/18/服务器基础知识"},"next":{"title":"浅谈ajax","link":"2018/07/12/浅谈ajax"},"plink":"http://yoursite.com/2018/07/15/封装的ajax()函数/","toc":[{"title":"1.封装一个自己的<code>ajax()</code>方法,减少代码的重复，不然每次都要重复的写一些相同的代码。","id":"1-封装一个自己的ajax-方法-减少代码的重复，不然每次都要重复的写一些相同的代码。","index":"1"}]}