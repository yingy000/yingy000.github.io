{"title":"3-内置对象","date":"2018-04-23T04:10:38.000Z","link":"2018/04/23/3-对象的类型-内置对象","tags":["JavaScript"],"categories":["前端"],"updated":"2018-10-12T14:41:21.356Z","content":"<h2 id=\"内置对象\">内置对象<a href=\"2018/04/23/3-对象的类型-内置对象#内置对象\"></a></h2><p>ECMA-262(ECMAScript5.1的规范)把内置对象定义为<code>&quot;由ECMAScript实现提供的、独立于宿主环境的所有对象,在ECMAScript程序开始执行时出现&quot;</code>。也就是说，不必明确实例化内置对象，它已经被实例化了。</p>\n<h2 id=\"1-Global对象\">1.Global对象<a href=\"2018/04/23/3-对象的类型-内置对象#1-Global对象\"></a></h2><p>Global对象是ECMAScript中最特别的对象，因为实际上它根本不存在。</p>\n<p><code>var g=Gloabl;  //ReferenceError: Gloabl is not defined</code></p>\n<p>明明Global是内置对象，为什么会显示错误消息呢？</p>\n<p>原因：因为Global对象实际上它根本不存在，所以不能把它赋值给一个变量。</p>\n<p>在ECMAScript，不存在独立的函数，所有函数都必须是某个对象的方法。比如说isNaN()、isFinite()、parseInt()、parseFloat()等看起来都像是独立的函数，但实际上都是Global对象的方法。Global对象还有好多方法。</p>\n<h3 id=\"1-1-encodeURI-方法和encodeURIComponent-方法\">1.1.encodeURI()方法和encodeURIComponent()方法<a href=\"2018/04/23/3-对象的类型-内置对象#1-1-encodeURI-方法和encodeURIComponent-方法\"></a></h3><p>encodeURI()方法和encodeURIComponent()方法用于编码传递给浏览器的URL，用专门的utf-8编码替换所有的非有效字符，使浏览器仍能够接受并理解它们。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var url=&quot;https://www.baidu.com/s? cl=3&amp;tn=baidutop 10&amp;fr=top 1000&amp;wd&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(encodeURI(url))</span><br><span class=\"line\"></span><br><span class=\"line\">//https://www.baidu.com/s?%20cl=3&amp;tn=baidutop%2010&amp;fr=top%201000&amp;wd</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(encodeURIComponent(url))</span><br><span class=\"line\"></span><br><span class=\"line\">/https%3A%2F%2Fwww.baidu.com%2Fs%3F%20cl%3D3%26tn%3Dbaidutop%2010%26fr%3Dtop%201000%26wd</span><br></pre></td></tr></table></div></figure>\n<p>encodeURL()方法：不对URI中的特殊字符进行编码，如冒号、前斜杠、问号、英镑符号。</p>\n<p>encodeURLComponent()方法：对它发现的所有非标准字符进行编码，这个方法基本上使得URL变得无用。</p>\n<h3 id=\"1-2-decodeURI-方法和decodeURIComponent-方法\">1.2.decodeURI()方法和decodeURIComponent()方法<a href=\"2018/04/23/3-对象的类型-内置对象#1-2-decodeURI-方法和decodeURIComponent-方法\"></a></h3><p>decodeURI()方法和decodeURIComponent()方法用于解码传递给浏览器的URL，decodeURI()方法只对encodeURL()方法替换的字符解码,同样decodeURLComponent()方法只对encodeURLComponent()替换的字符解码。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var url=&apos;https://www.baidu.com/s?%20cl=3&amp;tn=baidutop%2010&amp;fr=top%201000&amp;wd&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">decodeURI(url)   //&quot;https://www.baidu.com/s? cl=3&amp;tn=baidutop 10&amp;fr=top 1000&amp;wd&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var url=&apos;https%3A%2F%2Fwww.baidu.com%2Fs%3F%20cl%3D3%26tn%3Dbaidutop%2010%26fr%3Dtop%201000%26wd&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">decodeURIComponent(url)  //&quot;https://www.baidu.com/s? cl=3&amp;tn=baidutop 10&amp;fr=top 1000&amp;wd&quot;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"1-3-eval-方法：\">1.3.eval()方法：<a href=\"2018/04/23/3-对象的类型-内置对象#1-3-eval-方法：\"></a></h3><p>该方法就像整个ECMAScript的解释程序，接受一个参数，就是要执行的ECMAScript字符串。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval(&quot;1+3&quot;);   //4</span><br><span class=\"line\"></span><br><span class=\"line\">eval(&apos;console.log(&quot;helloworld&quot;)&apos;)   //helloworld</span><br><span class=\"line\"></span><br><span class=\"line\">eval(&quot;function add()&#123;console.log(5+5)&#125;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">add()   //10</span><br></pre></td></tr></table></div></figure>\n<p>当解释程序发现eval()调用时，它将把参数解释为真正的ECMAScript语句，然后把它插入该函数所在的位置，意味着eval()调用内部引用的变量可在参数意外定义。</p>\n<h3 id=\"1-4-Global属性\">1.4.Global属性<a href=\"2018/04/23/3-对象的类型-内置对象#1-4-Global属性\"></a></h3><p>undefined 、NaN、Infinity 、Object、Array 、Function  、Boolean 、String、Number 、Date 、RegExp  、Error</p>\n<p>EvalError 、RangeError、ReferenceError、SyntaxError   、TypeError 、URIError</p>\n<h2 id=\"2-Math对象\">2.Math对象<a href=\"2018/04/23/3-对象的类型-内置对象#2-Math对象\"></a></h2><h3 id=\"2-1-常量\">2.1.常量<a href=\"2018/04/23/3-对象的类型-内置对象#2-1-常量\"></a></h3><ul>\n<li><p><code>Math.E</code>：常量e，自然对数的底数。</p>\n</li>\n<li><p><code>Math.LN10</code>：10的自然对数。</p>\n</li>\n<li><p><code>Math.LN2</code>：2的自然对数。</p>\n</li>\n<li><p><code>Math.LOG10E</code>：以10为底的e的对数。</p>\n</li>\n<li><p><code>Math.LOG2E</code>：以2为底的e的对数。</p>\n</li>\n<li><p><code>Math.PI</code>：常量∏。</p>\n</li>\n<li><p><code>Math.SQRT1_2</code>：1除以2的平方根。</p>\n</li>\n<li><p><code>Math.SQRT2</code>：2的平方根。</p>\n</li>\n</ul>\n<h3 id=\"2-2-min-方法和max-方法\">2.2.min()方法和max()方法<a href=\"2018/04/23/3-对象的类型-内置对象#2-2-min-方法和max-方法\"></a></h3><p>min()方法和max()方法用于判断一组数中的最大值和最小值。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fvar max_num=Math.max(4,56,67,35,27,66)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(max_num);   //67</span><br><span class=\"line\"></span><br><span class=\"line\">var min_num=Math.min(4,56,67,35,27,66)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(min_num);  //4</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"2-3-abs-方法\">2.3.abs()方法<a href=\"2018/04/23/3-对象的类型-内置对象#2-3-abs-方法\"></a></h3><p>abs()方法返回数字的绝对值。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var num=Math.abs(-10)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num);  //10</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"2-4-把小数舍入成整数\">2.4.把小数舍入成整数<a href=\"2018/04/23/3-对象的类型-内置对象#2-4-把小数舍入成整数\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceil()方法：向上取整</span><br><span class=\"line\"></span><br><span class=\"line\">var num1=Math.ceil(3.32792)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num1);  //4</span><br><span class=\"line\"></span><br><span class=\"line\">floor()方法：向下取整</span><br><span class=\"line\"></span><br><span class=\"line\">var num2=Math.floor(3.32792)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num2);  //3</span><br><span class=\"line\"></span><br><span class=\"line\">round()方法：标准的四舍五入</span><br><span class=\"line\"></span><br><span class=\"line\">var num3=Math.round(3.32792)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num3);  //3</span><br><span class=\"line\"></span><br><span class=\"line\">var num4=Math.round(3.62792)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num4);  //4</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"2-5-三角函数\">2.5.三角函数<a href=\"2018/04/23/3-对象的类型-内置对象#2-5-三角函数\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* `Math.acos(x)`：计算反余弦值。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.asin(y)`：计算反正弦值。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.atan(x)`：计算反正切值。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.atan2(y,x)`：计算从X轴到一个点的角度。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.sin(x)`：计算正弦值。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.cos(x)`：计算余弦值。</span><br><span class=\"line\"></span><br><span class=\"line\">* `Math.tan(x)`：计算正切值。</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"2-6-random-方法\">2.6.random()方法<a href=\"2018/04/23/3-对象的类型-内置对象#2-6-random-方法\"></a></h3><p>random()方法，返回一个0~1之间的随机数，不包括0和1。</p>\n<p><code>number=Math.floor(Math.random()*total_number_of_choices+first_possible_value)</code></p>\n<p>使用<code>floor()</code>方法的原因是<code>random()</code>返回的都是小数值，但是我们通常需要的是选取一个随机整数值。</p>\n<p>选取1~10之间的随机整数(10项)</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var num=Math.floor(Math.random()*10+1)</span><br><span class=\"line\">console.log(num);</span><br></pre></td></tr></table></div></figure>\n<p>选取2~10之间的随机整数(9项)</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var num=Math.floor(Math.random()*9+2)</span><br><span class=\"line\">console.log(num);</span><br></pre></td></tr></table></div></figure>\n<p>我们可以把选取随机数的这样过程封装成一个函数。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function select(firstValue,lastVaule)&#123;</span><br><span class=\"line\">\tvar choices=lastVaule-firstValue+1;</span><br><span class=\"line\">\treturn Math.floor(Math.random()*choices+firstValue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var num=select(2,10);  //选取2~10之间的随机整数(9项)</span><br><span class=\"line\">console.log(num);</span><br><span class=\"line\">var arr=[1,2,3,4,5,6,7,8,9];</span><br><span class=\"line\">var result=arr[select(0,arr.length-1)];</span><br><span class=\"line\">console.log(result);//随机获取数组arr中的值</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"3-定义类和对象","link":"2018/04/25/3-定义类或对象"},"next":{"title":"3-本地对象","link":"2018/04/21/3-对象的类型-本地对象"},"plink":"http://yoursite.com/2018/04/23/3-对象的类型-内置对象/","toc":[{"title":"内置对象","id":"内置对象","index":"1"},{"title":"1.Global对象","id":"1-Global对象","index":"2","children":[{"title":"1.1.encodeURI()方法和encodeURIComponent()方法","id":"1-1-encodeURI-方法和encodeURIComponent-方法","index":"2.1"},{"title":"1.2.decodeURI()方法和decodeURIComponent()方法","id":"1-2-decodeURI-方法和decodeURIComponent-方法","index":"2.2"},{"title":"1.3.eval()方法：","id":"1-3-eval-方法：","index":"2.3"},{"title":"1.4.Global属性","id":"1-4-Global属性","index":"2.4"}]},{"title":"2.Math对象","id":"2-Math对象","index":"3","children":[{"title":"2.1.常量","id":"2-1-常量","index":"3.1"},{"title":"2.2.min()方法和max()方法","id":"2-2-min-方法和max-方法","index":"3.2"},{"title":"2.3.abs()方法","id":"2-3-abs-方法","index":"3.3"},{"title":"2.4.把小数舍入成整数","id":"2-4-把小数舍入成整数","index":"3.4"},{"title":"2.5.三角函数","id":"2-5-三角函数","index":"3.5"},{"title":"2.6.random()方法","id":"2-6-random-方法","index":"3.6"}]}]}