{"title":"jQuery对象和DOM对象","date":"2018-06-27T02:05:32.000Z","link":"2018/06/27/jQuery对象和DOM对象","tags":["JavaScript框架"],"categories":["前端"],"updated":"2018-10-12T14:46:54.009Z","content":"<blockquote>\n<p>JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，是一门十分强大的语言，Jquery是一个基于JavaScript的框架，它们之间有着千丝万缕的关系，我们一起来了解下吧。</p>\n</blockquote>\n<h2 id=\"JavaScript-VS-JQuery\">JavaScript VS JQuery<a href=\"2018/06/27/jQuery对象和DOM对象#JavaScript-VS-JQuery\"></a></h2><figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> &lt;body&gt;</span><br><span class=\"line\">\t&lt;input type=<span class=\"string\">\"button\"</span> id=<span class=\"string\">\"demo\"</span> value=<span class=\"string\">\"我是按钮\"</span> /&gt;</span><br><span class=\"line\">\t&lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/body&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;script type=\"text/</span>javascript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        window.onload = function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">            document.getElementById(\"</span>demo<span class=\"string\">\").onclick = function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">                // 要实现的效果：</span></span><br><span class=\"line\"><span class=\"string\">                // 1.让div展示出来</span></span><br><span class=\"line\"><span class=\"string\">                // 2.给div一段文本内容</span></span><br><span class=\"line\"><span class=\"string\">               var divs = document.getElementsByTagName(\"</span>div<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">                //获取一个数组</span></span><br><span class=\"line\"><span class=\"string\">                for(var i = 0; i &lt; divs.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    divs[i].style.display = \"</span>block<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">                    divs[i].innerText = \"</span>我是文本内容<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">                &#125;</span></span><br><span class=\"line\"><span class=\"string\">            &#125;;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>这是用JavaScript写的，功能是点击一个按钮，就会把隐藏的div显示出来，并且给每个div添加一段文本内容。但是这段用js写的代码存在一个很大的问题。</p>\n<p><strong>问题1：</strong></p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>如果页面存在很多个onload函数，会有什么后果呢？</p>\n<p>运行结果：4</p>\n<p>所以说结果是弹出最后一个onload，window.onload存在事件覆盖的问题，也就是说第四个window.onload将前三个window.onload函数给覆盖了。</p>\n<p><strong>问题二:</strong></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   window.onload = function() &#123;</span><br><span class=\"line\">\t\tdocument.getElementById(&quot;demo1&quot;).onclik = function() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">             document.getElementById(&quot;demo2&quot;).onclick=</span><br><span class=\"line\">             function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">             &#125;;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n<p>   若绑定的”demo1”的id值不存在，则打开浏览器的控制台会看到错误的消息，不再执行下去，所以会影响绑定的”demo2”中功能的执行，代码的容错率太低，对用户来说不希望是这样的。</p>\n<p><strong>问题三:各大主流浏览器的兼容性问题：</strong></p>\n<p><code>innerText</code>属性支持谷歌浏览器。不支持火狐浏览器，利用<code>innerHtml</code>属性存在着各种兼容性问题。</p>\n<p><strong>总结：</strong></p>\n<ul>\n<li><p><code>window.onload</code>事件只出现一次，如果出现多次，后面的事件会覆盖掉前面的事件</p>\n</li>\n<li><p>代码的容错行为，我们不希望看到错误</p>\n</li>\n<li><p>简单功能实现很繁琐，例如渐变的动画效果。</p>\n</li>\n</ul>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_1.png\" alt=\" \" class=\"article-img\"></p>\n<h2 id=\"了解JQuery\">了解JQuery<a href=\"2018/06/27/jQuery对象和DOM对象#了解JQuery\"></a></h2><p><strong>jQuery和JS库的联系与区别</strong></p>\n<p>jQuery其实是js的一个库（框架），它封装了我们开发中常用的一些功能，方便我们调用，提高了我们的开发效率，jQuery库：是别人帮我们封装好的js库</p>\n<p>Js库，它把我们常用的功能放到单独一个文件中，用的时候直接拿到我们的页面中来就可以了。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"../js/jquery.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">   $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   \t$(<span class=\"string\">\"#demo\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   \t\t$(<span class=\"string\">\"div\"</span>).show(<span class=\"number\">1000</span>).html(<span class=\"string\">\"这是一段文本\"</span>);</span><br><span class=\"line\">   \t&#125;);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>大家可以清晰地看到用jQuery实现同样的效果比用原生的javascript见得到的多了。并且不存在兼容性问题、不存在覆盖问题。这个大家不相信的话可以自己试一下。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">\t&lt;script src=<span class=\"string\">\"../js/jquery.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">\t&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;);    </span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);</span><br><span class=\"line\">    &#125;);    </span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;);    </span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>输出结果：</p>\n<p><img src=\"https://www.cnblogs.com/images/cnblogs_com/cliy-10/1232432/o_2.png\" alt=\" \" class=\"article-img\"></p>\n<p>大家这下相信相信不会存在覆盖问题了吧，应该也体会到了jQuery的强大了。</p>\n<p>JQuery还有一个非常牛逼的地方就是即使你代码中某些部分写错了，真正的效果在浏览器执行不出来，但是在浏览器的控制台中你不会看到错误，如果控制台没有报错，我们调试的时候要怎么办呢，这就需要我们掌握一定的调试jQuery代码的技巧。</p>\n<p><strong>jquery的优势</strong></p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_3.png\" alt=\" \" class=\"article-img\"></p>\n<p><strong>jQuery核心理念</strong></p>\n<ul>\n<li><p>wirte less,do more</p>\n</li>\n<li><p>链式编程、隐式迭代。</p>\n</li>\n</ul>\n<p><strong>jquery基本使用步骤:</strong></p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_4.png\" alt=\" \" class=\"article-img\"></p>\n<p><strong>jquery特点：</strong></p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_5.png\" alt=\" \" class=\"article-img\"></p>\n<ul>\n<li><p><code>Lightweight Footprint</code>：非常轻量级，其实压缩版源文件有80KB~90KB之间，但是官网上说的是30kb,这是什么原因呢？因为gzip,当浏览器真正加载的时候会经过http请求，这时候只要服务器开启gzip压缩，它的体积就能缩小到30KB，它同时支持AMD规范(模块化开发、按需加载)。</p>\n</li>\n<li><p><code>css3 Compliant</code>：支持所有css3的选择器，降低了学习的难度。</p>\n</li>\n<li><p><code>Cross-Browser</code>：跨浏览器兼容、IE6版本以上的浏览器都支持。</p>\n</li>\n</ul>\n<p><strong>注意:</strong></p>\n<ul>\n<li><p>$ === jQuery</p>\n</li>\n<li><p>$代表了我们jQuery的对象，只要操作jQuery就可以用$开始。</p>\n</li>\n<li><p>jQuery占用了$和jQuery这两个变量，我们不要再去声明这两个变量，否则会报错。</p>\n</li>\n<li><p>Js命名规范：数字、字母、下划线.</p>\n</li>\n<li><p>如果自己用var声明一个$符号，那jQuery的函数将不起作用</p>\n</li>\n</ul>\n<h2 id=\"JQuery入口函数\">JQuery入口函数<a href=\"2018/06/27/jQuery对象和DOM对象#JQuery入口函数\"></a></h2><figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一种写法：</span></span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种写法：一般不使用</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"><span class=\"comment\">//第三种写法</span></span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第四种写法</span></span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"built_in\">window</span>).load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></div></figure>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_10.png\" alt=\" \" class=\"article-img\"></p>\n<p><strong>jQuery的入口函数与JavaScript的入口函数区别</strong></p>\n<ul>\n<li>window.onload等到所有的外部资源加载完毕之后才执行，外部资源包括外部的图片文件、css文件、js文件、视频文件、音频文件等等……</li>\n</ul>\n<ul>\n<li><p>让一些不同的线程去加载那些外部的文件，jQuery是在主进程加载完之后就立即执行，也就是说jQuery不用等到所有的外部文件都加载完成才去执行，而那些外部文件就交给线程来执行。也这样理解，jQuery是使得一旦页面的文档对象模型（DOM树）变为安全的操纵，就立即运行JavaScript代码。</p>\n</li>\n<li><p>jquery中ready()函数的执行时机要比JavaScript中window.onload函数的时间要早。</p>\n</li>\n</ul>\n<ul>\n<li><p>jquery中这样的加载机制也存在着一定的问题，比如说你想要获取一张图片的高度时，可能就获取不到，因为可能这时候你想获取的图片的还没被加载进来，如果想要获取图片的高度，还必须放在window.onload中。</p>\n</li>\n<li><p>在JQuery和中JavaScript存在着这样的一个恒等式,所以如果在JQuery要获取图片的高度，必须要将获取图片宽度或者高度的代码放在这样的入口函数中。</p>\n</li>\n</ul>\n<p><code>$(window).load(function(){}) === window.onload</code></p>\n<h2 id=\"jquery对象与DOM对象\">jquery对象与DOM对象<a href=\"2018/06/27/jQuery对象和DOM对象#jquery对象与DOM对象\"></a></h2><p><strong>jquery对象与DOM对象之间的区别</strong></p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"我是按钮\"</span>  id=<span class=\"string\">\"btn1\"</span>/&gt;</span><br><span class=\"line\">    &lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">\t <span class=\"comment\">//javaScript方式获取按钮的id</span></span><br><span class=\"line\">\t    <span class=\"built_in\">window</span>.onload=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn1\"</span>).onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t &#125;</span><br><span class=\"line\">\t <span class=\"comment\">//jQuery方式获取按钮的id值</span></span><br><span class=\"line\">\t\t$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t   $(<span class=\"string\">\"#btn1\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t  &#125;)</span><br><span class=\"line\">\t    &#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>问题：为什么一个是JavaScript调用onclick()方法而jquery调用click()方法？</p>\n<p>因为jQuery中只有click方法，没有onclick方法，并且click方法和onclick方法功能相同，却更加简单。</p>\n<p>JavaScript中既有onclick()方法又有click()方法，但是这两个方法有着稍微的区别。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"我是按钮\"</span>  id=<span class=\"string\">\"btn1\"</span>/&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"我是按钮\"</span>  id=<span class=\"string\">\"btn2\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现的功能：javaScript方式:用第二个按钮去触发第一个按钮的事件</span></span><br><span class=\"line\">  <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn1\"</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t <span class=\"built_in\">console</span>.log(<span class=\"string\">\"我是第一个按钮\"</span>)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn2\"</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn1\"</span>).click();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>用第二个按钮的事件去触发第一个按钮的事件，这就是javascript对象中click方法的作用。</p>\n<p>注意：jQuery中所有的事件名称都不带”on”,原生的javaScript中既有带”on”的事件也有不带”on”的事件。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">\t\t\t$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> $btn=$(<span class=\"string\">\"#btn1\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log($btn);</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> btn=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn2\"</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(btn);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>运行结果：</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_6.png\" alt=\" \" class=\"article-img\"></p>\n<p>大家根据运行结果应该能清晰地看出jquery和DOM对象的区别了吧。</p>\n<p><strong>jquery对象与DOM对象的互相转换</strong></p>\n<p>把jQuery对象转化为DOM对象的主要用途就是为了使用DOM对象中的某些方法。也就是说，当jquery对象转化成DOM对象之后，就可以调用带”on”的事件了，比如说onclick事件、onchange事件等。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//jQuery对象转化为DOM对象</span></span><br><span class=\"line\">             <span class=\"comment\">//第一种方式</span></span><br><span class=\"line\">$(<span class=\"string\">\"btn1\"</span>)[<span class=\"number\">0</span>].onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"我是jQuery对象转化来的\"</span>);</span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\">   <span class=\"comment\">//第二种方式</span></span><br><span class=\"line\">$(<span class=\"string\">\"btn1\"</span>).get(<span class=\"number\">0</span>).onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"我是jQuery对象转化来的\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_9.png\" alt=\" \" class=\"article-img\"></p>\n<p>问题1：为什么是这样形式的转换？</p>\n<p>原因：jQuery实际上把选取到的DOM对象转化成一个数组，放在自己的一个集合中，然后封装成了一个jQuery对象，把选择的第一个元素就放到了第一个位置，其实获取到的对象是一个<strong>类数组</strong>，并不是纯粹的数组。</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_7.png\" alt=\" \" class=\"article-img\"></p>\n<p>问题2：那数组中取值为什么是0？</p>\n<p>因为通过id选择器获得只有唯一的一个，只需要转化一个，所以只取数组的第一个值就行了，下为标0。如下代码</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$(document).ready(function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        $(&quot;btn1&quot;)[0].onclick=function()&#123;&#125;;//等价</span><br><span class=\"line\">            //等价</span><br><span class=\"line\">\t    var $btn=[document.getElementById(&quot;btn1&quot;)]; //类数组，下标从0开始</span><br><span class=\"line\">\t    $btn[0].onclick=function()&#123;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n<p>注意，因为不仅仅是存在着id选择器、还有标签选择器、还有类选择器，通过这类的选择器一次性可以获取多个，如下图，jquery内部实现机制并没有办法一次性将全部的jquery对象转化为DOM对象，jQuery实际上把选取到的某一个DOM对象转化成一个数组。</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/cliy-10/1232432/o_8.png\" alt=\" \" class=\"article-img\"></p>\n<h2 id=\"jQuery绑定事件\">jQuery绑定事件<a href=\"2018/06/27/jQuery对象和DOM对象#jQuery绑定事件\"></a></h2><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//第一种写法：</span><br><span class=\"line\">$(document).ready(function()&#123;</span><br><span class=\"line\">    事件源.事件(function()&#123;</span><br><span class=\"line\">        事件处理程序</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">//第二种写法：</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">      事件源.事件(function()&#123;</span><br><span class=\"line\">         事件处理程序</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"jQuery版本问题\">jQuery版本问题<a href=\"2018/06/27/jQuery对象和DOM对象#jQuery版本问题\"></a></h2><ul>\n<li><p>jQuery 1.xxx和jQuery 2.xxx版本之间的区别：</p>\n<p>jQuery2版本的体积更小，并且不再支持IE6,7,8浏览器，从IE9浏览器以上开始支持。</p>\n</li>\n</ul>\n","prev":{"title":"JS封装库","link":"2018/06/28/Yquery"},"next":{"title":"jQuery之父-John Resig","link":"2018/06/26/John Resig"},"plink":"http://yoursite.com/2018/06/27/jQuery对象和DOM对象/","toc":[{"title":"JavaScript VS JQuery","id":"JavaScript-VS-JQuery","index":"1"},{"title":"了解JQuery","id":"了解JQuery","index":"2"},{"title":"JQuery入口函数","id":"JQuery入口函数","index":"3"},{"title":"jquery对象与DOM对象","id":"jquery对象与DOM对象","index":"4"},{"title":"jQuery绑定事件","id":"jQuery绑定事件","index":"5"},{"title":"jQuery版本问题","id":"jQuery版本问题","index":"6"}]}